package com.koolearn.daxuetool.common;

import okhttp3.ConnectionPool;
import okhttp3.MediaType;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.RequestBody;
import okhttp3.Response;

import java.io.IOException;
import java.util.concurrent.TimeUnit;

public class HttpKit {

    public static final MediaType media = MediaType.parse("application/json; charset=utf-8");

    private static OkHttpClient client = new OkHttpClient.Builder()
            .connectTimeout(1000, TimeUnit.SECONDS)
            .writeTimeout(1000, TimeUnit.SECONDS)
            .readTimeout(1000, TimeUnit.SECONDS)
            .retryOnConnectionFailure(true)
            .connectionPool(new ConnectionPool(1000,1, TimeUnit.SECONDS))
            .build();

    /**
     * json格式的字符串
     * @return
     * @throws IOException
     * @param url
     */
    public static String get(String url) throws IOException {
        Request request = new Request.Builder().addHeader("Connection","close")
                .url(url)
                .get()
                .build();
        Response response = client.newCall(request).execute();
        String string = response.body().string();
        System.out.println(string);
        return string;
    }

    /**
     * json格式的字符串
     * @return
     * @throws IOException
     * @param url
     */
    public static String post(String url,String body) throws IOException {
        RequestBody requestBody = RequestBody.create(media, body);
        Request request = new Request.Builder()
                .url(url)
                .post(requestBody)
                .build();
        Response response = client.newCall(request).execute();
        String string = response.body().string();
        return string;
    }

    /**
     * json格式的字符串
     * @return
     * @throws IOException
     * @param url
     */
    public static String delete(String url) throws IOException {
        RequestBody requestBody = RequestBody.create(media, "");
        Request request = new Request.Builder()
                .url(url)
                .delete(requestBody)
                .build();
        Response response = client.newCall(request).execute();
        String string = response.body().string();
        return string;
    }

    /**
     * json格式的字符串
     * @return
     * @throws IOException
     * @param url
     */
    public static String delete(String url,String body) throws IOException {

        RequestBody requestBody = RequestBody.create(media, body);
        Request request = new Request.Builder()
                .url(url)
                .delete(requestBody)
                .build();
        Response response = client.newCall(request).execute();
        String string = response.body().string();
        return string;
    }
}
